'''

Given a random binary tree of size N in the postorder format(with null links), you need to construct tree and print the tree in pretty form.

Input Format

A single line consisting of postorder representation of binary tree. # symbol represents null.

Constraints

1 <= N <= 1000

Output Format

Refer to sample output.

Sample Input 0

# # 8 # # 9 5 # # 7 2
Sample Output 0

2
  5(L)
    8(L)
    9(R)
  7(R)'''
from collections import deque

class TreeNode():
    def __init__(self, val):
        self.val = val
        self.left = None 
        self.right = None

def insert(q, root):
    if not q:
        return None

    val = q.pop()
    if val == '#':
        return None

    root = TreeNode(val)
    root.right = insert(q, root.right)
    root.left = insert(q, root.left)

    return root

def display(root, nspaces, label):
    if root is None:
        return 

    for i in range(nspaces):
        print(' ', end='')

    print(root.val, end='')
    if label != '':
        print('(', label, ')', sep='')
    else:
        print()
    display(root.left, nspaces + 2, 'L')
    display(root.right, nspaces + 2, 'R')

def main():
    a = input().split()
    root = None 
    q = deque(a)
    root = insert(q, root)
    display(root, 0, '')

main()


