'''
Subset Sums

Given a list arr of n integers, return sums of all subsets in it. Output sums can be printed in any order.

 

Example 1:

Input:
n = 2
arr[] = {2, 3}
Output:
0 2 3 5
Explanation:
When no elements is taken then Sum = 0.
When only 2 is taken then Sum = 2.
When only 3 is taken then Sum = 3.
When element 2 and 3 are taken then 
Sum = 2+3 = 5.
Example 2:

Input:
n = 3
arr = {5, 2, 1}
Output:
0 1 2 3 5 6 7 8
Your Task:  
You don't need to read input or print anything. Your task is to complete the function subsetSums() which takes a list/vector and an integer n as an input parameter and returns the list/vector of all the subset sums.

Expected Time Complexity: O(2n)
Expected Auxiliary Space: O(2n)

Constraints:
1 <= n <= 15
0 <= arr[i] <= 104'''

#User function Template for python3
class Solution:
	def subsetSums(self, arr, n):
		def find(arr,ds,i,n,sum):
		    if i>=len(arr) :
		        ds.append(sum)
		        return 
		    else:
		       sum+=arr[i]
		       find(arr,ds,i+1,n,sum)
		       sum-=arr[i]
		       find(arr,ds,i+1,n,sum)
		ds=[]
		sum=0 
		i=0
		find(arr,ds,i,n,sum)
		return ds
		
		
		
		
		
		
		
		
		
		
		
		
		
		


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    T = int(input())
    for i in range(T):
        N = int(input())
        arr = [int(x) for x in input().split()]
        ob = Solution()
        ans = ob.subsetSums(arr, N)
        ans.sort()
        for x in ans:
            print(x, end=" ")
        print("")

# } Driver Code Ends
